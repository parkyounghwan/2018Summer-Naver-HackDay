<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<context:component-scan base-package="com.naver.park.feed" />
	<import resource="spring-beans.xml"/>
	
	<batch:job id="job1">
		<batch:step id="step1" next="step2">
			<batch:tasklet>
				<batch:chunk reader="epFeedReader" processor="epFeedProcessor" writer="epFeedWriter" commit-interval="1000"></batch:chunk>
				<batch:listeners>
					<batch:listener ref="promotionListener"/>
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="step2">
			<batch:tasklet>
				<batch:chunk reader="epDeleteReader" processor="epDeleteProcessor" writer="epDeleteWriter" commit-interval="1000"></batch:chunk>
				<batch:listeners>
					<batch:listener ref="promotionListener"/>
				</batch:listeners>
			</batch:tasklet>
		</batch:step>	
	</batch:job>
	
	<bean id="promotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener" >
		<property name="keys" value="EP_HEADER, LATEST_EP"></property>
	</bean>
	
	<!-- stored job-meta in memory -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
	 
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

</beans>
